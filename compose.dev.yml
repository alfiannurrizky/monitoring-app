services:
  web:
    image: nginx:latest
    volumes:
      - ./:/var/www
      - ./docker/development/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    environment:
      - NGINX_HOST=localhost
    networks:
      - monitoring-app-development
    depends_on:
      php-fpm:
        condition: service_started

  php-fpm:
    build:
      context: .
      dockerfile: ./docker/common/php-fpm/Dockerfile
      target: development
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        XDEBUG_ENABLED: ${XDEBUG_ENABLED:-true}
        XDEBUG_MODE: develop,coverage,debug,profile
        XDEBUG_HOST: ${XDEBUG_HOST:-host.docker.internal}
        XDEBUG_IDE_KEY: ${XDEBUG_IDE_KEY:-DOCKER}
        XDEBUG_LOG: /dev/stdout
        XDEBUG_LOG_LEVEL: 0
    env_file:
      - .env
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - ./:/var/www
    networks:
      - monitoring-app-development
    depends_on:
      db:
        condition: service_healthy

  workspace:
    build:
      context: .
      dockerfile: ./docker/development/workspace/Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        XDEBUG_ENABLED: ${XDEBUG_ENABLED:-true}
        XDEBUG_MODE: develop,coverage,debug,profile
        XDEBUG_HOST: ${XDEBUG_HOST:-host.docker.internal}
        XDEBUG_IDE_KEY: ${XDEBUG_IDE_KEY:-DOCKER}
        XDEBUG_LOG: /dev/stdout
        XDEBUG_LOG_LEVEL: 0
    ports:
      - "${VITE_PORT:-5173}:5173"
    tty: true
    stdin_open: true
    env_file:
      - .env
    volumes:
      - ./:/var/www
    networks:
      - monitoring-app-development
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mysql:latest
    container_name: monitoring_db
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "${DB_USERNAME:-root}",
          "-p${DB_PASSWORD:-root}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - db-data-development:/var/lib/mysql
    networks:
      - monitoring-app-development

networks:
  monitoring-app-development:
    driver: bridge

volumes:
  db-data-development:
